@using Shared.Entity
<div class="card mb-5" style="width: 45rem;">
    <div class="card-body">
        <div class="w-100 d-flex justify-content-between">
            <h3 class="card-title">
                <img src="@GemData.Icon" alt="Gem-Icon" class="icon"/>@GemData.Name
            </h3>
            <button class="edit-button" @onclick="() => _isEditing = !_isEditing">
                <div class="edit-icon @(_isEditing ? "check-mark-icon" : "pen-icon")"></div>
            </button>
        </div>
        <div class="row gy-5">
            <div class="col">
                <h5 class="card-title">Value</h5>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Price Raw:
                            <input type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" style="width: 40%; height: 100%" value="@GetCurrencyString(_rawValue)" @onchange="UpdateRawValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData.RawGem())" target="_blank" rel="noopener noreferrer">Price Raw: @CurrencyValue(_rawValue ?? GemData.RawCost())</a>
                    }
                </p>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Worst Case:
                            <input style="width: 40%; height: 100%" type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" value="@GetCurrencyString(_worstCaseValue)" @onchange="UpdateWorstCaseValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData.ResultGem(ResultCase.Worst))" target="_blank" rel="noopener noreferrer">Worst Case: @CurrencyValue(_worstCaseValue ?? GemData.Value(ResultCase.Worst))</a>
                    }
                </p>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Middle Case:
                            <input style="width: 40%; height: 100%" type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" value="@GetCurrencyString(_middleCaseValue)" @onchange="UpdateMiddleCaseValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData.ResultGem(ResultCase.Middle))" target="_blank" rel="noopener noreferrer">Middle Case: @CurrencyValue(_middleCaseValue ?? GemData.Value(ResultCase.Middle))</a>
                    }
                </p>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Best Case:
                            <input style="width: 40%; height: 100%" type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" value="@GetCurrencyString(_bestCaseValue)" @onchange="UpdateBestCaseValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData.ResultGem(ResultCase.Best))" target="_blank" rel="noopener noreferrer">Best Case: @CurrencyValue(_bestCaseValue ?? GemData.Value(ResultCase.Best))</a>
                    }
                </p>
            </div>
            <div class="col">
                <h5 class="card-title">Profit per Try</h5>
                <p class="card-text">Cost: @CurrencyValue(GemData.CostPerTry(_rawValue, FilterTempleCost()))</p>
                <p class="card-text">Worst Case: @CurrencyValue(_worstCaseValue is null ? GemData.Profit(ResultCase.Worst, _rawValue, FilterTempleCost()) : GemData.Profit((decimal)_worstCaseValue, _rawValue, FilterTempleCost()))</p>
                <p class="card-text">Middle Case: @CurrencyValue(_middleCaseValue is null ? GemData.Profit(ResultCase.Middle, _rawValue, FilterTempleCost()) : GemData.Profit((decimal)_middleCaseValue, _rawValue, FilterTempleCost()))</p>
                <p class="card-text">Best Case: @CurrencyValue(_bestCaseValue is null ? GemData.Profit(ResultCase.Best, _rawValue, FilterTempleCost()) : GemData.Profit((decimal)_bestCaseValue, _rawValue, FilterTempleCost()))</p>
            </div>
            <div class="col d-flex">
                <button class="btn btn-primary align-self-end w-100">+ Value</button>
            </div>
            <div class="col d-flex flex-column justify-content-between">
                <h5 class="card-title">Average Profit per Try</h5>
                <button class="btn btn-outline-secondary align-self-end w-100" id="avg-profit">
                    @CurrencyValue(GemData.AvgProfitPerTry(_rawValue, _worstCaseValue, _middleCaseValue, _bestCaseValue, FilterTempleCost()))
                </button>
            </div>
        </div>
    </div>
</div>