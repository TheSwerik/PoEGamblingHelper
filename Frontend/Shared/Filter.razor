@using PoEGamblingHelper3.Shared.Model
@inject HttpClient HttpClient


<div class="w-75 d-flex flex-column">
    <div class="d-flex flex-row">
        <div class="col input-group flex-column">
            <label>Gem to corrupt</label>
            <input/>
            @* <BlazoredTypeahead SearchMethod="@Search" @bind-Value="@FilterValues.Gem" Context="search"> *@
            @*     <SelectedTemplate> *@
            @*         @search.Name *@
            @*     </SelectedTemplate> *@
            @*     <ResultTemplate> *@
            @*         @search.Name *@
            @*     </ResultTemplate> *@
            @* </BlazoredTypeahead> *@
        </div>
        <div class="col input-group flex-column">
            <label>Temple cost</label>
            <input/>
            @* <button class="btn btn-outline-danger w-25" type="button"> *@
            @*     <img src="icons/fa-arrows-rotate.svg" class="icon" alt="refresh"/> *@
            @* </button> *@
        </div>
        <div class="col input-group flex-column">
            <label>Chaos per Divine</label>
            <input/>
            @* <button class="btn btn-outline-danger w-25" type="button"> *@
            @*     <img src="icons/fa-arrows-rotate.svg" class="icon" alt="refresh"/> *@
            @* </button> *@
        </div>
        <button class="btn btn-secondary">CORRUPT NOW</button>
    </div>
    <div class="d-flex flex-row mt-3 mb-3 pointer" onclick="@ToggleFilters" data-bs-toggle="collapse" data-bs-target="#collapsable" aria-expanded="false" aria-controls="collapsable">
        <hr class="col"/>
        <p class="col text-center">@(FiltersExpanded ? "Collapse" : "Expand") Filters</p>
        <hr class="col"/>
    </div>
    <div class="collapse" id="collapsable">
        <div class="d-flex flex-row">
            <div class="col input-group flex-column">
                <label>Price per Try</label>
            </div>
            <div class="col input-group flex-column">
                <label>Gem Types</label>
            </div>
            <div class="col input-group flex-column">
                <label>Sorting</label>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public IEnumerable<Gem> Gems { get; set; }

    public FilterValues FilterValues { get; set; } = new();
    public Gem Gem { get; set; }
    public string SelectedInt { get; set; } = "nothing selected";
    public DateTime LastPoeNinjaUpdate { get; set; } = DateTime.Now;
    public decimal TempleCost { get; set; } = 0;
    public decimal ChaosPerDivine { get; set; } = 0;
    private bool FiltersExpanded { get; set; } = false;

    private async Task<IEnumerable<Gem>> Search(string searchText)
    {
        var response = new[] { new Gem { Name = "test-name" } };
        return response;
    }

    private void ToggleGemType(GemType type)
    {
        if (FilterValues.GemTypes.Contains(type)) FilterValues.GemTypes.Remove(type);
        else FilterValues.GemTypes.Add(type);
    }

    private string LastPoeNinjaUpdateText()
    {
        var now = DateTime.Now;
        var difference = now - LastPoeNinjaUpdate;
        return difference.Minutes < 1 ? "just now" : $"{difference.Minutes} minutes ago";
    }

    public void ToggleFilters() { FiltersExpanded = !FiltersExpanded; }

}