@using Domain.Entity.Gem
<div class="card mb-5" style="width: 45rem;">
    <div class="card-body">
        <div class="w-100 d-flex justify-content-between">
            <h3 class="card-title wrap-ellipsis">
                <img src="@GemData.Icon" alt="Gem-Icon" class="icon"/>@GemData.Name
            </h3>
            <div class="d-flex justify-content-end" style="width: min-content">
                @if (_isEditing)
                {
                    <button class="edit-button" @onclick="ResetValues">
                        <div class="edit-icon reset-icon"></div>
                    </button>
                }
                <button class="edit-button" @onclick="() => _isEditing = !_isEditing">
                    <div class="edit-icon @(_isEditing ? "check-mark-icon" : "pen-icon")"></div>
                </button>
            </div>
        </div>
        <div class="row gy-5">
            <div class="col">
                <h5 class="card-title">Value</h5>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Price Raw:
                            <input type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" style="width: 40%; height: 100%" value="@GetCurrencyString(_values.RawValue)" @onchange="UpdateRawValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData)" target="_blank" rel="noopener noreferrer">Price Raw: @CurrencyValue(_values.RawValue ?? GemData.RawCost())</a>
                    }
                </p>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Worst Case:
                            <input style="width: 40%; height: 100%" type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" value="@GetCurrencyString(_values.WorstCaseValue)" @onchange="UpdateWorstCaseValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData, ResultCase.Worst)" target="_blank" rel="noopener noreferrer">Worst Case: @CurrencyValue(_values.WorstCaseValue ?? GemData.Value(ResultCase.Worst))</a>
                    }
                </p>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Middle Case:
                            <input style="width: 40%; height: 100%" type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" value="@GetCurrencyString(_values.MiddleCaseValue)" @onchange="UpdateMiddleCaseValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData, ResultCase.Middle)" target="_blank" rel="noopener noreferrer">Middle Case: @CurrencyValue(_values.MiddleCaseValue ?? GemData.Value(ResultCase.Middle))</a>
                    }
                </p>
                <p class="card-text">
                    @if (_isEditing)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            Best Case:
                            <input style="width: 40%; height: 100%" type="text" pattern="[0-9]+([.][0-9]{1,2}){0,1}?" value="@GetCurrencyString(_values.BestCaseValue)" @onchange="UpdateBestCaseValue"/>
                        </div>
                    }
                    else
                    {
                        <a href="@TradeUrl(GemData, ResultCase.Best)" target="_blank" rel="noopener noreferrer">Best Case: @CurrencyValue(_values.BestCaseValue ?? GemData.Value(ResultCase.Best))</a>
                    }
                </p>
            </div>
            <div class="col">
                <h5 class="card-title">Profit per Try</h5>
                <p class="card-text">Cost: @CurrencyValue(GemData.CostPerTry(_values.RawValue, FilterTempleCost()))</p>
                <p class="card-text">Worst Case: @CurrencyValue(_values.WorstCaseValue is null ? GemData.Profit(ResultCase.Worst, _values.RawValue, FilterTempleCost()) : GemData.Profit((decimal)_values.WorstCaseValue, _values.RawValue, FilterTempleCost()))</p>
                <p class="card-text">Middle Case: @CurrencyValue(_values.MiddleCaseValue is null ? GemData.Profit(ResultCase.Middle, _values.RawValue, FilterTempleCost()) : GemData.Profit((decimal)_values.MiddleCaseValue, _values.RawValue, FilterTempleCost()))</p>
                <p class="card-text">Best Case: @CurrencyValue(_values.BestCaseValue is null ? GemData.Profit(ResultCase.Best, _values.RawValue, FilterTempleCost()) : GemData.Profit((decimal)_values.BestCaseValue, _values.RawValue, FilterTempleCost()))</p>
            </div>
            <div class="col d-flex">
                <div class="d-block align-self-end w-100" data-bs-toggle="tooltip" data-bs-title="This feature is not implemented yet">
                    <button class="btn btn-primary w-100" disabled>+ Value</button>
                </div>
            </div>
            <div class="col d-flex flex-column justify-content-between">
                <h5 class="card-title">Average Profit per Try</h5>
                <button class="btn btn-outline-secondary align-self-end w-100" id="avg-profit">
                    @CurrencyValue(GemData.AvgProfitPerTry(_values.RawValue, _values.WorstCaseValue, _values.MiddleCaseValue, _values.BestCaseValue, FilterTempleCost()))
                </button>
            </div>
        </div>
    </div>
</div>